local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/uwuware"))()
local Window = Library:CreateWindow("Dead Rails Hack")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

local WalkSpeed = 10
local AutoMove = false
local GodMode = false
local NoClip = false
local CoordLabel
local TimerLabel

-- üîπ L·∫•y th·ªùi gian game b·∫Øt ƒë·∫ßu
local GameStartTime = os.time()
local EndTime = GameStartTime + 600 -- 10 ph√∫t (600 gi√¢y)

-- üîπ Xuy√™n t∆∞·ªùng
function ToggleNoClip(state)
    NoClip = state
    RunService.Stepped:Connect(function()
        if NoClip then
            for _, v in pairs(Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end)
end

-- üîπ B·∫•t t·ª≠
function ToggleGodMode(state)
    GodMode = state
    while GodMode do
        Humanoid.Health = 100
        task.wait(0.1)
    end
end

-- üîπ T·ª± ƒë·ªông ƒëi ƒë·∫øn ƒëi·ªÉm cu·ªëi
function AutoTeleport(state)
    AutoMove = state
    while AutoMove do
        HumanoidRootPart.CFrame = HumanoidRootPart.CFrame:Lerp(CFrame.new(-346, 0, -49060), 0.02)
        task.wait(0.1)
    end
end

-- üîπ C·∫≠p nh·∫≠t t·ªça ƒë·ªô theo th·ªùi gian th·ª±c
function UpdateCoordinates()
    while task.wait(0.2) do
        if CoordLabel and HumanoidRootPart then
            local pos = HumanoidRootPart.Position
            CoordLabel:SetText(string.format("T·ªça ƒë·ªô: X=%.1f, Y=%.1f, Z=%.1f", pos.X, pos.Y, pos.Z))
        end
    end
end

-- üîπ ƒê·∫øm ng∆∞·ª£c th·ªùi gian 10 ph√∫t t·ª´ l√∫c game b·∫Øt ƒë·∫ßu
function StartTimer()
    while true do
        local TimeLeft = math.max(0, EndTime - os.time())
        local minutes = math.floor(TimeLeft / 60)
        local seconds = TimeLeft % 60
        if TimerLabel then
            TimerLabel:SetText(string.format("Th·ªùi gian c√≤n l·∫°i: %02d:%02d", minutes, seconds))
        end
        if TimeLeft <= 0 then
            TimerLabel:SetText("H·∫øt th·ªùi gian!")
            break
        end
        task.wait(1)
    end
end

-- üõ†Ô∏è Th√™m c√°c n√∫t v√†o menu
Window:AddToggle("Xuy√™n T∆∞·ªùng", function(state)
    ToggleNoClip(state)
end)

Window:AddToggle("B·∫•t T·ª≠", function(state)
    ToggleGodMode(state)
end)

Window:AddToggle("T·ª± ƒë·ªông ƒë·∫øn ƒëi·ªÉm cu·ªëi", function(state)
    AutoTeleport(state)
end)

Window:AddSlider("T·ªëc ƒë·ªô di chuy·ªÉn", {min = 5, max = 50, default = 10}, function(value)
    WalkSpeed = value
    Humanoid.WalkSpeed = value
end)

CoordLabel = Window:AddLabel("T·ªça ƒë·ªô: ƒêang c·∫≠p nh·∫≠t...")
TimerLabel = Window:AddLabel("Th·ªùi gian c√≤n l·∫°i: 10:00")

task.spawn(UpdateCoordinates)
task.spawn(StartTimer)

Library:Init()
